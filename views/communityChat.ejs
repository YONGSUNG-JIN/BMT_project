<!DOCTYPE html>
<html lang="en">
<%- include('./partials/head.ejs') %>

    <body>
        <%- include('./partials/nav.ejs') %>

            <div class="chat-container">
                <header class="chat-header">
                    <h1><i class="fas fa-smile"></i> ChatCord</h1>
                    <a href="/community" id="leave-btn" class="btn">Leave Room</a>
                </header>
                <main class="chat-main">
                    <div class="chat-sidebar">
                        <h3><i class="fas fa-comments"></i> Room Name:</h3>
                        <h2 id="room-name"></h2>
                        <h3><i class="fas fa-users"></i></h3>
                        <ul id="users">

                        </ul>
                    </div>
                    <div class="chat-messages"></div>
                </main>
                <div class="chat-form-container">
                    <form id="chat-form">
                        <input name="message" type="text" placeholder="Enter Message" required autocomplete="off" />
                        <button class="btn"><i class="fas fa-paper-plane"></i> Send</button>
                    </form>
                </div>
            </div>
            <!-- querystring library -->
            <script src="https://cdnjs.cloudflare.com/ajax/libs/qs/6.11.0/qs.js"
                integrity="sha512-QXQgo/rJDUE26PrRHxhISwratdyZi9e/zvnlv72Mk6W3lmTa5YiiVaR9cYxNRjQIZXzAShwslz6rkOttv90g6g=="
                crossorigin="anonymous" referrerpolicy="no-referrer"></script>
            <script src="/socket.io/socket.io.js"></script>
            <script>
                const chatForm = document.getElementById('chat-form');
                const chatMessage = document.querySelector('.chat-messages');
                const roomName = document.getElementById('room-name');
                const userList = document.getElementById('users');

                //Getting username & room from URL
                const { username, room } = Qs.parse(location.search, {
                    ignoreQueryPrifix: true
                });

                const socket = io();

                //Join chatroom
                socket.emit('joinRoom', { username, room });

                //Get room and users
                socket.on('roomUsers',
                    ({ room, users }) => {
                        console.log(room, users)
                        outputRoomName(room);
                        outputUsers(users);
                    })

                // Message submit
                chatForm.addEventListener('submit', (e) => {
                    e.preventDefault();
                    // Get message text
                    const message = e.target.elements.message.value;
                    // Emit message to server
                    socket.emit('chatMessage', message);
                    // Clear input
                    e.target.elements.message.value = '';
                    e.target.elements.message.value.focus();
                });
                socket.on('message', (message) => {
                    outputMessage(message);
                    chatMessage.scrollTop = chatMessage.scrollHeight;
                })


                // Output message to the DOM
                function outputMessage(msg) {
                    const div = document.createElement('div');
                    div.classList.add('message');
                    div.innerHTML = `
                ${msg.username} / ${msg.time}
                <p class="text">${msg.text}</p>`;
                    document.querySelector('.chat-messages').appendChild(div)
                }

                //Add room name to the DOM
                function outputRoomName(room) {
                    roomName.innerHTML = room;
                };
                //Add users name to the DOM
                function outputUsers(users) {
                    userList.innerHTML = `
                ${users.map(user => `<li>${user.username}</li>`).join('')}
                `
                };

            </script>
    </body>

</html>